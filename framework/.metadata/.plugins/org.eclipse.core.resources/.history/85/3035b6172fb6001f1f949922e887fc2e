package br.edu.ifms.LanHouse.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
@Entity
public class LanHouse implements Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int id;
	private String nome; 
	private String endereco;
	
	@ManyToMany(mappedBy = "lanhouses")
	private List<Cliente> clientes = new ArrayList<Cliente>();
	
	@OneToOne
	@JoinColumn(name="dono_id")
	private Dono dono;
	@OneToMany(mappedBy = )
	
	private List<Computador> computadores = new ArrayList<Computador>();
	
	
	public LanHouse() {
		// TODO Auto-generated constructor stub
	}

	public LanHouse(int id, String nome, String endereco, Dono dono) {
		super();
		this.id = id;
		this.nome = nome;
		this.endereco = endereco;
		this.dono = dono;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getEndereco() {
		return endereco;
	}

	public void setEndereco(String endereco) {
		this.endereco = endereco;
	}
	

	public List<Cliente> getClientes() {
		return clientes;
	}



	public void setClientes(List<Cliente> clientes) {
		this.clientes = clientes;
	}



	public Dono getDono() {
		return dono;
	}



	public void setDono(Dono dono) {
		this.dono = dono;
	}


	public List<Computador> getComputadores() {
		return computadores;
	}

	public void setComputadores(List<Computador> computadores) {
		this.computadores = computadores;
	}

	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		LanHouse other = (LanHouse) obj;
		return id == other.id;
	}
	
	
	
	
}
